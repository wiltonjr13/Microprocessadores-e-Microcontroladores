Para as questões 2 a 5, considere que as variáveis 'f', 'g', 'h', 'i' e 'j' são do tipo inteiro (16 bits na arquitetura do MSP430), e que o vetor 'A[]' é do tipo inteiro. Estas variáveis estão armazenadas nos seguintes registradores: f: R4, g: R5, h: R6, i: R7, j: R8 e A: R9. Utilize os registradores R11, R12, R13, R14 e R15 para armazenar valores temporários.


1. Escreva os trechos de código assembly do MSP430 para:


(a) Somente setar o bit menos significativo de R5.


 mov.w 01, R11
 bis.w R5, R11


(b) Somente setar dois bits de R6: o menos significativo e o segundo menos significativo.


mov.w 03, R11
bis.w R6, R11


(c) Somente zerar o terceiro bit menos significativo de R7.


mov.w 04, R11
bic.w R11, R7


(d) Somente zerar o terceiro e o quarto bits menos significativo de R8.


mov.w 0C, R11
bic.w R11, R8


(e) Somente inverter o bit mais significativo de R9.


mov.w 80, R11
xor.w R11, R9


(f) Inverter o nibble mais significativo de R10, e setar o nibble menos significativo de R10.


mov.w F0, R11
mov.w 0F, R12
xor.w R11, R10
bis.w R12, R10


2. "Traduza" o seguinte trecho de código em C para o assembly do MSP430:


if(i>j) f = g+h+10;
else f = g-h-10;


cmp j,i
jl SUB_F
add.w g,R11
add.w #10,R11
add.w h,R11
mov.w R11,f
SUB_F:
sub.w g,R11
sub.w h,R11
sub.w #10,R11
mov.w R11,f


3. "Traduza" o seguinte trecho de código em C para o assembly do MSP430:


while(save[i]!=k) i++;


LOOP:
mov.w R7, R12
rla R12
add.w R10, R12
cmp 0(R12), R9
jeq FIM
inc.w R7
jmp LOOP
FIM:


4. "Traduza" o seguinte trecho de código em C para o assembly do MSP430:


mov.w #100, R11
LOOP:
mov.w R7, R12
rla R12
add.w R10, R12
cmp R7, R11
jeq FIM
inc.w R7
jmp LOOP
FIM: